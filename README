
                             Wyrd v0.2.0 README

                                 Paul Pelzl

                               April 26, 2005



INTRODUCTION

Wyrd is a text-based front-end to Remind, a sophisticated calendar and alarm
program available from
http://www.roaringpenguin.com/penguin/open_source_remind.php .  Wyrd serves two
purposes:

   1) It displays reminders in a day-calendar view suitable for seeing your
      schedule at a glance.

   2) It makes creating and editing reminders faster.  However, Wyrd does not hide
      Remind's textfile programmability, for this is what makes Remind a truly
      powerful program.

Wyrd also requires only a fraction of the resources of most calendar programs
available today.

Wyrd is Free Software, available under Version 2 of the GNU General Public
License.  See 'COPYING' for details.



REQUIREMENTS

Wyrd depends on the following software packages:

   * OCaml >= 3.08
   * the ncurses library (and development headers)
   * Remind >= 3.0.23
   * standard Unix utilities such as 'cat', 'sort', 'cal', and 'less'



INSTALLATION

From the root of the wyrd-0.1.0 source tree, execute

   ./configure
   make

Finally, become root and execute

   make install



USAGE

First off, learn how to use Remind.  Wyrd makes no attempt to hide the details
of Remind from the user.

Having done that, you may launch Wyrd using

   wyrd [FILE]

FILE is an optional reminders file; the default is ~/.reminders.

Display:
   At the top of the window is a short (incomplete) list of keybindings.  
   
   The left window displays a scrollable day schedule view, with reminders
   highlighted in blue.  If the DURATION specifier is used for a reminder, the
   highlighted area will be rendered with an appropriate size.
   
   The upper right window displays a month calendar, with the color of each day
   representing the number of reminders it contains.  The colors range over
   shades of white -> blue -> magenta as the number of reminders increases.  The
   selected date is highlighted in cyan.

   The lower right window displays a list of the untimed reminders falling on
   the selected date.

   The bottom window displays the full text of the MSG for the reminder that is
   currently selected.

Navigation:

   Scroll up and down the schedule : <up>, <down> or k, j
   Jump back or forward by a day   : <pageup>, <pagedown> or 4, 6 or <, > or H, L
   Jump back or forward by a week  : 8, 2 or [, ] or K, J
   Jump back or forward by a month : {, }
   Jump to current date and time   : <home>
   Switch between schedule and
      untimed reminders window     : <left>, <right>, h, l
   Zoom in on the schedule         : z

   Notice that if you have a numeric keypad, the 4/6/8/2 keys will let you move
   directionally in the month calendar view at the upper-right of the screen.
   Similarly, {H, J, K, L} will cause directional calendar movement using the
   standard mapping from vi(1).

Editing reminders:

   Note: By default, Wyrd is configured to use the Vim editor for modifying your
   reminder files.  To use a different editor, see the CONFIGURATION section
   below.

   If you select a timeslot in the schedule view, then hit 't', you will begin
   creating a new timed reminder.  Wyrd will open up your reminder file in your
   favorite editor and move the cursor to the end of the file, where a new
   reminder template has been created.  The template has the selected date and
   time filled in, so in many cases you will only need to fill in a MSG value.

   Similarly, hitting 'u' will begin creating an untimed reminder.  'w' will
   create a weekly timed reminder, and 'W' will create a weekly untimed reminder;
   'm' will create a monthly timed reminder, and 'M' will create a monthly
   untimed reminder.

   'T' and 'U' also create timed and untimed reminders (respectively), but first
   will provide a selection dialog for you to choose which reminder file you
   want to add this reminder to.  The set of reminder files is determined by
   scanning the INCLUDE lines in your default reminder file.

   If you select a reminder (either timed or untimed) and hit <enter>, you will
   begin editing that reminder.  Wyrd will open up the appropriate reminders
   file in your editor and move the cursor to the appropriate REM line.

Viewing reminders:

   Aside from viewing reminders as they fall in the schedule, you can press
   'r' to view all reminders triggered on the selected date in a less(1)
   window.  Similar, 'R' will view all reminders triggered on or after the
   selected date (all non-expired reminders are triggered).

Searching:

   Wyrd allows you to search for reminders with MSG values that match a search
   string.  Press '/' to start entering a (case insensitive) regular
   expression.  After the expression has been entered, press '<return>' and
   Wyrd will locate the next reminder that matches the regexp.  Press 'n' to
   repeat the same search.  Entry of a search string may be cancelled with
   '<esc>'.

   The regular expression syntax is Emacs-compatible.

   Note: Sorry, there is no "search backward" function.  The search function
         requires the use of "remind -n", which operates only forward in time.



CONFIGURATION

   Many of Wyrd's settings may be controlled by creating a run-configuration
   file in ~/.wyrdrc.  You may wish to look at the default wyrdrc file, which is
   probably found in /usr/local/etc .  
   
Configuration Commands:
   
   The configuration file format supports five commands:

      include <filename string>
      set <variable>=<value string>
      bind <key string> <operation>
      unbind <key string>
      color <object> <foreground> <background>

   The 'include' command will load in another run-configuration file.  When you
   create a ~/.wyrdrc file, you may want to save some typing by including the
   system default wyrdrc.  The filename must be formatted as a quoted string.

   The 'set' command is used to set the value of a system variable.  The values
   must be quoted strings.

   The 'bind' command will bind a keypress to an interface operation.  The
   keypress must be a quoted string.  In addition to ordinary characters, the
   following special key strings will be recognized:

      <esc>, <tab>, <enter>, <return>, <insert>, <delete>, <home>, <end>,
      <pageup>, <pagedown>, <space>, <backspace>, <left>, <right>, <up>,
      <down>, <f1>-<f12>

   Ctrl and Alt/Meta modifiers may be specified by prefixing the key string with
   "\\C" or "\\M", respectively.

   The 'unbind' command will remove all bindings of the given key string.

   The 'color' command will apply the specified foreground and background
   colors to the appropriate object.  Wyrd will recognize the following colors:
   black, red, green, yellow, blue, magenta, cyan, white.

Configuration Variables:

   The following configuration variables may be set using the 'set' syntax
   defined above:

      reminders_file        : Controls which Remind file Wyrd will operate on.
                              The default is ~/.reminders .
     
      edit_old_command      : Controls the command used to edit a pre-existing
                              reminder.  The special characters '%f' and '%n'
                              will be substituted with a filename to edit and a
                              line number to navigate to within that file.
     
      edit_new_command      : Controls the command used to edit a new reminder.
                              The special character '%f' will be substituted
                              with a filename to edit.  Ideally, this command
                              should move the cursor to the last line of the
                              file, where the new reminder template is created.
     
      timed_template        : Controls the format of the REM line created when
                              editing a new timed reminder.  The following
                              character substitutions will be made: 
                              '%M' -> month name, '%d' -> day of the month,
                              '%y' -> year, '%h' -> hour, '%m' -> minute, 
                              '%w' -> weekday name.
     
      untimed_template      : Controls the format of the REM line created when
                              editing a new untimed reminder.  The substitution
                              syntax is the same as for "timed_template".
                                
      templateN             : Controls the format of a generic user-defined REM 
                              line template; N may range from 0 to 9.  The
                              substitution syntax is the same as for
                              "timed_template".

      busy_level1           : An integer value specifying the maximum number of
                              reminders in a day colored using the color scheme
                              for 'calendar_level1'.
      busy_level2           : Same as above, using the 'calendar_level2' color
                              scheme.
      busy_level3           : Same as above, using the 'calendar_level2' color
                              scheme rendered in bold.
      busy_level4           : Same as above, using the 'calendar_level3' color
                              scheme.  Any day with more reminders than this will
                              be rendered using the 'calendar_level3' color
                              scheme rendered in bold.
     
                              (For maximum usefulness, busy_level1 <
                              busy_level2 < busy_level3 < busy_level4.)

      week_starts_monday    : A boolean value ("true" or "false") that
                              determines the first day of the week.

      schedule_12_hour      : A boolean value that determines whether the
                              timed reminders window is drawn in 12- or 24-hour
                              time.

      selection_12_hour     : A boolean value that determines whether the
                              selection information is drawn with 12- or 24-hour
                              time.

      status_12_hour        : A boolean value that determines whether the
                              current time is drawn using a 12- or 24-hour clock.

      description_12_hour   : A boolean value that determines whether reminder
                              start and end times are drawn using 12- or 24-hour
                              time in the description window.

                              
Bindable Operations:

   The following Wyrd operations may be bound to keypresses using the 'bind'
   syntax defined above:

      scroll_up            : move cursor up one increment
      scroll_down          : move cursor down one increment
      next_day             : jump ahead one day
      previous_day         : jump backward one day
      next_week            : jump ahead one week
      previous_week        : jump backward one week
      home                 : jump to the current date and time
      zoom                 : zoom in on the day schedule view
      edit                 : edit a preexisting reminder
      new_timed            : create a new timed reminder
      new_timed_dialog     : same as above, with a reminder file selection dialog
      new_untimed          : create a new untimed reminder
      new_untimed_dialog   : same as above, with a reminder file selection dialog
      new_templateN        : create a new user-defined reminder using
                             templateN, where N may range from 0 to 9
      new_templateN_dialog : same as above, with a reminder file selection dialog
      switch_window        : switch between the day schedule window on the left,
                             and the untimed reminder window on the right
      begin_search         : begin entering a search string
      search_next          : search for the next occurrence of the search string
      view_remind          : view the output of 'remind' for the selected date
      view_remind_all      : view the output of 'remind' for the selected date,
                             triggering all non-expired reminders
      quit                 : exit Wyrd

      entry_complete       : signal completion of search string entry
      entry_backspace      : delete the last character of the search string
      entry_cancel         : cancel entry of a search string

Colorable Objects:

   The following objects may be rendered in different colors using the 'color'
   syntax defined above:

      help             : the help bar at the top of the screen
      timed_default    : an empty line in the timed reminders window
      timed_reminder   : a nonempty line in the timed reminders window
      untimed_reminder : an entry in the untimed reminders window
      timed_date       : the vertical date strip on the left side of the screen
      selection_info   : the line providing date/time for the current selection
      description      : the reminder description window
      status           : the bottom bar providing current date and time
      calendar_labels  : the month and weekday labels in the calendar window
      calendar_level1  : calendar days with low activity
      calendar_level2  : calendar days with medium activity
      calendar_level3  : calendar days with high activity
      calendar_today   : the current day in the calendar window
      left_divider     : the vertical line to the left of the timed reminders window
      right_divider    : the vertical and horizontal lines to the right of the timed
                         reminders window



ACKNOWLEDGMENTS

   Thanks, of course, to David Skoll for writing such a powerful reminder
   system.  Thanks also to Nicolas George, who wrote the OCaml curses bindings
   used within Wyrd.



CONTACT INFO

   The Wyrd website is located at http://www.eecs.umich.edu/~pelzlpj/wyrd .

   Wyrd is written by Paul Pelzl <pelzlpj@eecs.umich.edu>.  Feel free to contact
   me with bugs, feature requests, etc.

   Wyrd is maintained with the aid of GNU Arch.  Interested developers are
   encouraged to track Wyrd development via my public archive:

      pelzlpj@eecs.umich.edu--2005 \
            http://www-personal.engin.umich.edu/~pelzlpj/tla/2005

   Primary Wyrd development may be found on branch wyrd--main .



MISCELLANEOUS

   "Wyrd is a concept in ancient Anglo-saxon and Nordic cultures roughly
   corresponding to fate."  -- Wikipedia


